function Table(count) {
    if (typeof count == 'number') {
        this.array = new Uint8Array(Math.ceil(count / 2));
    } else {
        this.array = count;
    }
}

Table.prototype.setValue = function(hash, value) {
    var byteIndex = (hash - (hash % 2)) / 2;
    if (hash % 2 == 0) {
        this.array[byteIndex] &= (0xf << 4);
        this.array[byteIndex] |= value;
    } else {
        this.array[byteIndex] &= 0xf;
        this.array[byteIndex] |= (value << 4);
    }
}

Table.prototype.getValue = function(hash) {
    var byteIndex = Math.floor(hash / 2);
    var bitIndex = hash % 2;
    var byteValue = this.array[byteIndex];
    if (bitIndex == 0) {
        return byteValue & 0xf;
    } else {
        return (byteValue >> 4) & 0xf;
    }
}

exports.Table = Table;
